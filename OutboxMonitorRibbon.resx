<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnProcessOutboxItems.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>